openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: playlist
    description: Everything about playlists
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: login
    description: Login to streaming services
paths:
  /playlist/transfer:
    post:
      tags:
        - playlist
      summary: Send a transfer request to the server
      description: Send a transfer request to the server
      operationId: postPlaylist
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobId'
        '400':
          description: Internal Server Error
  /playlist/{id}:
    get:
      tags:
        - playlist
      summary: Get current status of job, returns either a status or TransferCompletion
      description: Get current status of job, returns either a status or TransferCompletion
      operationId: getPlaylist
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The transfer ID
      responses:
        '200':
          description: Automated transfer completed, send TransferCompletion data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferCompletion'
        '202':
          description: Automated transfer not yet completed, send status
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "Transferring, 76/83"
        '400':
          description: Internal Server Error
    patch:
      tags:
        - playlist
      summary: Manually add a song to the new playlist
      description: Manually add a song to the new playlist
      operationId: patchPlaylist
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The transfer ID
      requestBody:
        description: URL to song
        required: true
        content:
          application/json:
            schema:
              properties:
                song:
                  type: string
                  example: "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
      responses: 
        '204':
          description: Song was successfully added to the playlist
        '400':
          description: Internal Server Error
  /playlist/{id}/finalize:
    post:
      tags:
        - playlist
      summary: Finalize song transfer
      description: Finalize song transfer
      operationId: finalizePlaylist
      parameters:
        - in: path
          name: id   # Note the name is the same as in the path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The transfer ID
      responses: 
        '204':
          description: Transfer was successfully finalized
        '400':
          description: Internal Server Error
        
    
components:
  schemas:
    JobId:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10980600754
    TransferCompletion:
      type: object
      properties:
        playlist:
          $ref: '#/components/schemas/Playlist'
        unfindableSongs:
          type: array
          items:
            type: string
          example: [ "song 1", "song 2"  ]
    Playlist:
      type: object
      properties:
        name:
          type: string
          example: playlist 1
        id:
          type: integer
          format: int64
          example: 10980600754
        songs:
          type: array
          items:
            $ref: '#/components/schemas/Song'
        length:
          type: integer
          example: 7
        lastModified:
          type: string
          example: 2023-04-06T01:57:40Z
    Song:
      type: object
      required: [ "name", "artist", "dateReleased" ]
      properties:
        name:
          type: string
          example: Never Gonna Give You Up
        artist:
          type: string
          example: Rick Astley
        dateRelased:
          type: string
          example: 2009-04-01T01:41:40Z
        album:
          type: string
          example: Whenever You Need Somebody
        genre:
          type: string
          example: Jazz